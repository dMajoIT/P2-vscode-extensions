' Run with DEBUG enabled to view

_clkfreq = 300_000_000                                  ' <---  not colored correctly

sprites = 128

VAR x[sprites], y[sprites], dx[sprites], dy[sprites], orient[sprites], scale[sprites], opacity[sprites]

PUB go() | i

  debug(`plot myplot size 384 384 update)
  debug(`myplot cartesian 1)
' ^^^^^^^^^^ file is assumed to start with CON - NOT colored correctly
' -----------------------------------------------------------------
DAT
' ADC program setup
		org	$B0			'put PASM code up high

adc_start	fltl	pins			'set pins to ADC mode
		wrpin	adc_modes,pins
		setse1	x

	_ret_	setint1	#event_se1		'enable interrupt on event, return to Spin2

adc_modes	long	p_adc_gio | p_adc		'adc modes, by state
		long	p_adc_1x  | p_adc
		long	p_adc_vio | p_adc
		long	p_adc_1x  | p_adc

pins		res	1	'initially set by Spin2 code to select the pins
x		res	1
y		res	1

' -----------------------------------------------------------------

PUB go() | Phase, Head, Tail, Diff, HeadPtr, HeadData, TailPtr, TailPtrOpp, TailData, TailDataOpp, Fade, FadeOpp, Modulus, ModulusOpp, FinalData

  'Configure PLOT
  debug("`plot p pos 330 100 size 350 350 update")      ' <----  NOT colored correctly!
  debug("`p origin 175 175 polar -256 textsize 14 textstyle 1") ' <----  NOT colored correctly!

  'Configure SCOPE
  debug("`scope s pos 700 100 size 700 810 samples 701 rate 1 linesize 3 textsize 12") ' <----  NOT colored correctly!
  debug("`s 'HeadData' -10000 10000 170 620 15 $FF0000") ' <----  NOT colored correctly!
  debug("`s 'TailData' -10000 10000 170 420 15 $00FFFF")
  debug("`s 'Weight' 0 128 170 420 0 $007F7F")
  debug("`s 'TailDataOpp' -10000 10000 170 220 15 $FFFF00")
  debug("`s 'WeightOpp' 0 128 170 220 0 $7F7F00")
  debug("`s 'Final' -10000 10000 170 20 15 $00FF00")
  debug("`s 'Mod' -10000 10000 170 20 15 $003F3F")
  debug("`s 'ModOpp' -10000 10000 170 20 15 $3F3F00")

  'Configure FFT
  debug("`fft f pos 40 100 size 256 200 samples 256 rate 1 textsize 12 logscale") ' <----  NOT colored correctly!
  debug("`f 'Final' 0 10000 170 15 15")

  'Configure SPECTRO
  debug("`spectro t pos 380 1983 depth 300 samples 256 rate 10 luma8x %100 mag 0 range 1000 logscale", dly(200)) ' <----  NOT colored correctly!

' -----------------------------------------------------------------

PRI showbmp(letter, image_address, lut_offset, lut_size, image_longs) | i
  image_address += lut_offset
  debug(``#(letter) lutcolors `uhex_long_array_(image_address, lut_size))
  image_address += lut_size << 2 - 4
  repeat image_longs
    debug(``#(letter) `uhex_(long[image_address += 4]))

' -----------------------------------------------------------------

VAR md, cb, cy, ci, cq, ca, cf, xf, bs, ds, bc, dc, ac, bv, av
    db, hf, hl, hh, ll, lh, vs, bl, dl, al, pm, px, pl, bm, pn
PUB start(pal, interlaced, x_total, x_pixels, x_tweak, y_pixels, y_tweak, palette, bitmap, pin) | dotf, dotps, i


  debug(udec(pm,px),uhex(#pn_))  ' BAD  Why not coloor #pn_ ???

DAT
pn_             res     1       'pin(s)

' -----------------------------------------------------------------

CON
  _clkfreq = 100_000_000
  debug_main					'single-step through main code <---- BAD debug_main is NOT a constant

  debug_coginit					'single-step through main code <---- BAD debug_main is NOT a constant

' -----------------------------------------------------------------
DAT
        long                1e+38, 1e+37, 1e+36, 1e+35, 1e+34, 1e+33, 1e+32, 1e+31
        long  1e+30, 1e+29, 1e+28, 1e+27, 1e+26, 1e+25, 1e+24, 1e+23, 1e+22, 1e+21
        long  1e+20, 1e+19, 1e+18, 1e+17, 1e+16, 1e+15, 1e+14, 1e+13, 1e+12, 1e+11

' -----------------------------------------------------------------
DAT myVar long 1
DAT init_asm
              org
              ' Get pin assignments and use to create
              ' masks for setting those pins.
              call      #read_args
              add ma_mtmp3,ma_adpcm_bufferbase


DAT read_args
              org
              mov       arg1_, ptra
              add       arg1_, #(1*4)

arg1_   res   1
ma_mtmp3      res 1
ma_mtmp1      res 1
ma_adpcm_bufferbase long @adpcm_buffers

adpcm_buffers
' -----------------------------------------------------------------
